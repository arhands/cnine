name: Build wheels

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest] # ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      # Install torch on macOS so delocate can find the dylibs
      - name: Preinstall torch on macOS
        if: matrix.os == 'macos-latest'
        run: python -m pip install torch

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "pp* *-manylinux_i686 *-manylinux_armv7l *-musllinux_*"
          CIBW_CONFIG_FILE: .cibuildwheel/config.toml  # Point to your config
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            DYLD_LIBRARY_PATH=$(python3 -c "import torch; import os; print(os.path.dirname(torch.__file__) + '/lib')") delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheelhouse/*.whl


#          CMAKE_ARGS: -DWITH_CUDA=OFF -DUSE_MKL=OFF 
#      - name: Repair wheels with auditwheel
#        run: |
#          for whl in dist/*.whl; do
#            auditwheel repair "$whl" -w wheelhouse/ \
#              --exclude libtorch_python.so \
#              --exclude libtorch_cpu.so
#          done

